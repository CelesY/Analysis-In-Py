#安装包及导入(import packages)-------------------
install.packages('readxl')
install.packages('psych')
install.packages("bnlearn")
install.packages('ggplot2')
install.packages('patchwork')
install.packages('tidyverse')
install.packages('dplyr')
install.packages('ggpmisc')
library(readxl)
library(psych)
library(bnlearn)
library(ggplot2)
library(patchwork)
library(tidyverse)
library(dplyr) 
library(ggpmisc)
#导入数据(import data)----------------------------
data2020 <- read_excel("C:/Users/Celeste/Desktop/data2020.xls", sheet = "Sheet0")
View(data2020)
#描述性分析(descriptive analysis)-------------------------
describe(data2020)
#序列时序(sequence timing)------------
data2020 %>% {
  Ca<-ggplot(data2020,aes(Year,Capital,group=1))+geom_line()
  Cu<-ggplot(data2020,aes(Year,Currency,group=1))+geom_line()
  Go<-ggplot(data2020,aes(Year,Gold,group=1))+geom_line()
  Fr<-ggplot(data2020,aes(Year,Forex,group=1))+geom_line()
  En<-ggplot(data2020,aes(Year,Energyconsumption,group=1))+geom_line()
  Go+Fr+Ca+Cu+En
}
#相关性检验(Correlation test)-----------------------
acf(data2020,lag=25)
#回归分析(regression analysis)--------------------------
data2020 %>% {
  Ca<-ggplot(data2020, aes(x=Capital,y=Energyconsumption)) + 
    geom_point(color = "blue", size = 2, alpha = 5/10) +
    geom_smooth(method = lm,formula=y~I(x),se=FALSE) +
    stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~~')), 
                 formula = y ~ x, parse = TRUE, size = 4,label.x = 0.01, label.y = 1) + 
    stat_fit_tb(tb.type = 'fit.anova', label.y = 0.92, label.x = 0.01, size = 4, parse = TRUE) + 
    theme_classic()
  Cu<-ggplot(data2020, aes(x=Currency,y=Energyconsumption)) + 
    geom_point(color = "maroon", size = 2, alpha = 5/10) +
    geom_smooth(method = lm,formula=y~I(x),se=FALSE) +
    stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~~')), 
                 formula = y ~ x, parse = TRUE, size = 4,label.x = 0.01, label.y = 1) + 
    stat_fit_tb(tb.type = 'fit.anova', label.y = 0.92, label.x = 0.01, size = 4, parse = TRUE) + 
    theme_classic()
  Go<-ggplot(data2020, aes(x=Gold,y=Energyconsumption)) + 
    geom_point(color = "gold", size = 2, alpha = 5/10) +
    geom_smooth(method = lm,formula=y~I(x),se=FALSE) +
    stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~~')), 
                 formula = y ~ x, parse = TRUE, size = 4,label.x = 0.01, label.y = 1) + 
    stat_fit_tb(tb.type = 'fit.anova', label.y = 0.92, label.x = 0.01, size = 4, parse = TRUE) + 
    theme_classic()
  Fr<-ggplot(data2020, aes(x=Forex,y=Energyconsumption)) + 
    geom_point(color = "steelblue", size = 2, alpha = 5/10) +
    geom_smooth(method = lm,formula=y~I(x),se=FALSE) +
    stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~~')), 
                 formula = y ~ x, parse = TRUE, size = 4,label.x = 0.01, label.y = 1) + 
    stat_fit_tb(tb.type = 'fit.anova', label.y = 0.92, label.x = 0.01, size = 4, parse = TRUE) + 
    theme_classic()
  Go+Fr+Ca+Cu
}
#多元线性回归(Multiple Linear Regression)----------------
data<-lm(formula= Energyconsumption~Capital+Currency+Gold+Forex,data=data2020)
summary(data)
data1<-lm(formula= Energyconsumption~Currency+Gold+Forex,data=data2020)
summary(data1)
data2<-lm(formula= Energyconsumption~Gold+Forex,data=data2020)
summary(data2)
#卡方检验(Chi-square test)-----------------------
chisq.test(cbind(data2020[, 2], data2020[, 5]), correct = TRUE)
chisq.test(cbind(data2020[, 2], data2020[, 3]), correct = TRUE)
